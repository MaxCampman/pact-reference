name: Pact-Rust Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ ubuntu-latest, windows-latest, macos-latest ]
        rust: [ stable ]
    env:
      pact_do_not_track: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - name: Install shared mime info DB
        if: runner.os == 'macOS'
        run: brew install shared-mime-info
      - name: Tests
        uses: marcopolo/cargo@master # TODO: - use actions-rs/cargo@v1 when PR merged https://github.com/actions-rs/cargo/pull/59
        with:
          working-directory: rust
          command: test
        env:
          RUST_LOG: debug
          RUST_BACKTRACE: 1
      - name: Build Components
        uses: marcopolo/cargo@master
        with:
          working-directory: rust
          command: build
      - name: Clippy
        uses: marcopolo/cargo@master
        with:
          working-directory: rust
          command: clippy
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt
      # cbingen needs this version as the latest version does not work. But the CMake build checks for the latest
      # version, so we need both
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-04-12
          override: true
          components: rustfmt
      - name: Install doxygen
        if: runner.os == 'Linux'
        run: sudo apt-get install -y doxygen
      - name: Build pact_ffi with CMake
        run: ./ci-build.sh
        working-directory: rust/pact_ffi
        shell: bash
        if: runner.os == 'Linux'
      - name: Run the C FFI tests
        if: runner.os == 'Linux'
        working-directory: c/consumer-verification
        run: |
          sudo apt update
          sudo apt install libcurl4-openssl-dev
          /usr/bin/aclocal
          autoconf
          automake --add-missing
          ./configure
          make
          src/consumer-verification basic ../../rust/target/debug/libpact_ffi.so
          src/consumer-verification error ../../rust/target/debug/libpact_ffi.so

  musl-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
         docker run --rm --user "$(id -u)":"$(id -g)" -v $(pwd):/workspace -w /workspace/rust -t pactfoundation/rust-musl-build ./scripts/ci-musl-build.sh
